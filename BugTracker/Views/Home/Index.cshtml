@model BugTracker.Models.Helpers.ProjectsListViewModel
@{
    ViewBag.Title = "Home Page";
}
@section styles{
    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.css">
}
@if (User.Identity.IsAuthenticated) {
    <!-- ADMIN SECTION -->
    if (User.IsInRole("Admin")) {
    <!-- COLOR BOXES AT TOP OF PAGE -->
    <div class="row colorbox-group-widget">
        @*<div class="white-box">
            <ul class="nav nav-tabs tabs customtab">*@
                <li class="active tab" style="display: inline;">
                    <a href="#critical" data-toggle="tab">
                        <div class="col-md-3 col-sm-6 info-color-box">
                            <div class="white-box">
                                <div class="media bg-danger">
                                    <div class="media-body">
                                        <h3 class="info-count">@Model.AllTickets.Where(t => t.TicketPriority.Id == 5).Count() <span class="pull-right"><i class="fa fa-fire"></i></span></h3>
                                        <p class="info-text font-12">Critical Tickets</p>
                                        <p class="info-ot font-15">Unassigned:<span class="label label-rounded">@Model.AllTickets.Where(t => (t.TicketPriority.Id == 5 && t.AssignedUserId == null)).Count()</span></p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </a>
                </li>
                <li class="tab" style="display: inline;">
                    <a href="#highPriority" data-toggle="tab">
                        <div class="col-md-3 col-sm-6 info-color-box">
                            <div class="white-box">
                                <div class="media bg-warning">
                                    <div class="media-body">
                                        <h3 class="info-count">@Model.AllTickets.Where(t => t.TicketPriority.Id == 4).Count() <span class="pull-right"><i class="fa fa-bolt"></i></span></h3>
                                        <p class="info-text font-12">High Priority Tickets</p>
                                        <p class="info-ot font-15">Unassigned:<span class="label label-rounded">@Model.AllTickets.Where(t => (t.TicketPriority.Id == 4 && t.AssignedUserId == null)).Count()</span></p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </a>
                </li>
                <li class="tab" style="display: inline;">
                    <a href="#notUpdated" data-toggle="tab">
                        <div class="col-md-3 col-sm-6 info-color-box">
                            <div class="white-box">
                                <div class="media bg-info">
                                    <div class="media-body">
                                        <h3 class="info-count">@Model.AllTickets.Where(t => t.Updated > DateTime.Now.Date.AddDays(-7)).Count() <span class="pull-right"><i class="fa fa-calendar"></i></span></h3>
                                        <p class="info-text font-12">Tickets Not Updated for 7 Days</p>
                                        <p class="info-ot font-15">Unassigned:<span class="label label-rounded">@Model.AllTickets.Where(t => (t.Updated > DateTime.Now.Date.AddDays(-14)) && (t.AssignedUserId == null)).Count()</span></p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </a>
                </li>
                <li class="tab" style="display: inline;">
                    <a href="#unassigned" data-toggle="tab">
                        <div class="col-md-3 col-sm-6 info-color-box">
                            <div class="white-box">
                                <div class="media bg-roseybrown">
                                    <div class="media-body" style="color:white;">
                                        <h3 class="info-count">@Model.AllTickets.Where(t => t.AssignedUserId == null).Count() <span class="pull-right"><i class="fa fa-users"></i></span></h3>
                                        <p class="info-text font-12">Unassigned Tickets</p>
                                        <p class="info-ot font-15">Dev's with No Assignments<span class="label label-rounded">@Model.DevelopersWithNoTicketAssignments.Count()</span></p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </a>
                </li>
            @*</ul>
        </div>*@


    <!-- GRAPHS SECTION -->
    </div><div class="row">
        <div class="col-md-4 col-sm-12">
            <div class="white-box order-chart-widget">
                <h4 class="box-title">Ticket Priorities</h4>
                <div id="ticket_priority_donut" style="height: 387px;"></div>
                <ul class="list-inline m-b-0 m-t-20 t-a-c">
                    <li>
                        <h6 class="font-15"><i class="fa fa-circle m-r-5 text-danger"></i>Critical</h6>
                    </li>
                    <li>
                        <h6 class="font-15"><i class="fa fa-circle m-r-5 text-warning"></i>High</h6>
                    </li>
                    <li>
                        <h6 class="font-15"><i class="fa fa-circle m-r-5 text-info"></i>Medium</h6>
                    </li>
                    <li>
                        <h6 class="font-15"><i class="fa fa-circle m-r-5 text-success"></i>Low</h6>
                    </li>
                </ul>
            </div>
        </div>
        <div class="col-md-4 col-sm-12">
            <div class="white-box order-chart-widget" style="height: 539px;">
                <h3 class="box-title">User Count Per Role</h3>
                <div id="developerInfoChart" style="height: 425px"></div>
            </div>
        </div>
        <div class="col-md-4 col-sm-12">
            <div class="white-box order-chart-widget">
                <h4 class="box-title">Ticket Statuses</h4>
                <div id="ticket_status_donut" style="height: 350px;"></div>
                <ul class="list-inline m-b-0 m-t-20 t-a-c">
                    <li>
                        <h6 class="font-15"><i class="fa fa-circle m-r-5 text-danger"></i>Submitted</h6>
                    </li>
                    <li>
                        <h6 class="font-15"><i class="fa fa-circle m-r-5 text-warning"></i>Assigned</h6>
                    </li>
                    <li>
                        <h6 class="font-15"><i class="fa fa-circle m-r-5 text-primary"></i>In-Progress</h6>
                    </li>
                    <li>
                        <h6 class="font-15"><i class="fa fa-circle m-r-5 text-info"></i>Pending</h6>
                    </li>
                    <li>
                        <h6 class="font-15"><i class="fa fa-circle m-r-5 text-success"></i>Resolved</h6>
                    </li>
                </ul>
            </div>
        </div>
    </div>
    }
    else {
    <!-- PROJECTMANAGER SECTION -->
        if (User.IsInRole("ProjectManager")) {
            <!-- PROJECTMANAGER COLOR BOXES AT TOP OF PAGE -->
            <div class="row colorbox-group-widget">
                @*<div class="white-box">
                    <ul class="nav nav-tabs tabs customtab">*@
                <li class="active tab" style="display: inline;">
                    <a href="#critical" data-toggle="tab">
                        <div class="col-md-3 col-sm-6 info-color-box">
                            <div class="white-box">
                                <div class="media bg-danger">
                                    <div class="media-body">
                                        <h3 class="info-count">@Model.UserProjects.Where(p => p.Tickets.Any(t => t.TicketPriority.Id == 5)).Count() <span class="pull-right"><i class="fa fa-fire"></i></span></h3>
                                        <p class="info-text font-12">Critical Tickets</p>
                                        <p class="info-ot font-15">Unassigned:<span class="label label-rounded">@Model.UserProjects.Where(p => p.Tickets.Any(t => t.TicketPriority.Id == 5 && t.AssignedUserId == null)).Count()</span></p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </a>
                </li>
                <li class="tab" style="display: inline;">
                    <a href="#highPriority" data-toggle="tab">
                        <div class="col-md-3 col-sm-6 info-color-box">
                            <div class="white-box">
                                <div class="media bg-warning">
                                    <div class="media-body">
                                        <h3 class="info-count">@Model.UserProjects.Where(p => p.Tickets.Any(t => t.TicketPriority.Id == 4)).Count() <span class="pull-right"><i class="fa fa-bolt"></i></span></h3>
                                        <p class="info-text font-12">High Priority Tickets</p>
                                        <p class="info-ot font-15">Unassigned:<span class="label label-rounded">@Model.UserProjects.Where(p => p.Tickets.Any(t => t.TicketPriority.Id == 4 && t.AssignedUserId == null)).Count()</span></p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </a>
                </li>
                <li class="tab" style="display: inline;">
                    <a href="#notUpdated" data-toggle="tab">
                        <div class="col-md-3 col-sm-6 info-color-box">
                            <div class="white-box">
                                <div class="media bg-info">
                                    <div class="media-body">
                                        <h3 class="info-count">@Model.UserProjects.Where(p => p.Tickets.Any(t => t.Updated > DateTime.Now.Date.AddDays(-7))).Count() <span class="pull-right"><i class="fa fa-calendar"></i></span></h3>
                                        <p class="info-text font-12">Tickets Not Updated for 7 Days</p>
                                        <p class="info-ot font-15">Unassigned:<span class="label label-rounded">@Model.UserProjects.Where(p => p.Tickets.Any(t => (t.Updated > DateTime.Now.Date.AddDays(-14)) && (t.AssignedUserId == null))).Count()</span></p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </a>
                </li>
                <li class="tab" style="display: inline;">
                    <a href = "#unassigned" data-toggle="tab">
                        <div class="col-md-3 col-sm-6 info-color-box">
                            <div class="white-box">
                                <div class="media bg-roseybrown">
                                    <div class="media-body" style="color:white;">
                                        <h3 class="info-count">@Model.UserProjects.Where(p => p.Tickets.Any(t => t.AssignedUserId == null)).Count() <span class="pull-right"><i class="fa fa-users"></i></span></h3>
                                        <p class="info-text font-12">Unassigned Tickets</p>
                                        <p class="info-ot font-15">Dev's with No Assignments<span class="label label-rounded">@Model.UserProjects.Where(z => z.Users.Any(u => u.Projects.Count() <= 0)).Count()</span></p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </a>
                </li>
                @*</ul>
                    </div>*@


            </div>

            <!-- PROJECTMANAGER GRAPHS SECTION -->
            <div class="row">
                <div class="col-md-4 col-sm-12">
                    <div class="white-box order-chart-widget">
                        <h4 class="box-title">Ticket Priorities</h4>
                        <div id="pmticket_priority_donut" style="height: 387px;"></div>
                        <ul class="list-inline m-b-0 m-t-20 t-a-c">
                            <li>
                                <h6 class="font-15"><i class="fa fa-circle m-r-5 text-danger"></i>Critical</h6>
                            </li>
                            <li>
                                <h6 class="font-15"><i class="fa fa-circle m-r-5 text-warning"></i>High</h6>
                            </li>
                            <li>
                                <h6 class="font-15"><i class="fa fa-circle m-r-5 text-info"></i>Medium</h6>
                            </li>
                            <li>
                                <h6 class="font-15"><i class="fa fa-circle m-r-5 text-success"></i>Low</h6>
                            </li>
                        </ul>
                    </div>
                </div>
                <div class="col-md-4 col-sm-12">
                    <div class="white-box order-chart-widget" style="height: 539px;">
                        <h3 class="box-title">User Count Per Role</h3>
                        <div id="pmdeveloperInfoChart" style="height: 425px"></div>
                    </div>
                </div>
                <div class="col-md-4 col-sm-12">
                    <div class="white-box order-chart-widget">
                        <h4 class="box-title">Ticket Statuses</h4>
                        <div id="pmticket_status_donut" style="height: 350px;"></div>
                        <ul class="list-inline m-b-0 m-t-20 t-a-c">
                            <li>
                                <h6 class="font-15"><i class="fa fa-circle m-r-5 text-danger"></i>Submitted</h6>
                            </li>
                            <li>
                                <h6 class="font-15"><i class="fa fa-circle m-r-5 text-warning"></i>Assigned</h6>
                            </li>
                            <li>
                                <h6 class="font-15"><i class="fa fa-circle m-r-5 text-primary"></i>In-Progress</h6>
                            </li>
                            <li>
                                <h6 class="font-15"><i class="fa fa-circle m-r-5 text-info"></i>Pending</h6>
                            </li>
                            <li>
                                <h6 class="font-15"><i class="fa fa-circle m-r-5 text-success"></i>Resolved</h6>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        }
        else {
                <!-- DEVELOPER SECTION -->
            if (User.IsInRole("Developer")) {
                <!-- DEVELOPER COLOR BOXES AT TOP OF PAGE -->
                <div class="row colorbox-group-widget">
                    <li class="active tab" style="display: inline;">
                        <a href="#critical" data-toggle="tab">
                            <div class="col-md-4 col-sm-8 info-color-box">
                                <div class="white-box">
                                    <div class="media bg-danger">
                                        <div class="media-body">
                                            <h3 class="info-count">@Model.UserTickets.Where(t => t.TicketPriority.Id == 5).Count() <span class="pull-right"><i class="fa fa-fire"></i></span></h3>
                                            <p class="info-text font-12">Critical Tickets</p>
                                            @*<p class="info-ot font-15">Unassigned:<span class="label label-rounded">@Model.AllTickets.Where(t => (t.TicketPriority.Id == 5 && t.AssignedUserId == null)).Count()</span></p>*@
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </a>
                    </li>
                    <li class="tab" style="display: inline;">
                        <a href="#highPriority" data-toggle="tab">
                            <div class="col-md-4 col-sm-8 info-color-box">
                                <div class="white-box">
                                    <div class="media bg-warning">
                                        <div class="media-body">
                                            <h3 class="info-count">@Model.UserTickets.Where(t => t.TicketPriority.Id == 4).Count() <span class="pull-right"><i class="fa fa-bolt"></i></span></h3>
                                            <p class="info-text font-12">High Priority Tickets</p>
                                            @*<p class="info-ot font-15">Unassigned:<span class="label label-rounded">@Model.AllTickets.Where(t => (t.TicketPriority.Id == 4 && t.AssignedUserId == null)).Count()</span></p>*@
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </a>
                    </li>
                    <li class="tab" style="display: inline;">
                        <div class="col-md-4 col-sm-8 info-color-box">
                            <div class="white-box">
                                <div class="media bg-info">
                                    <div class="media-body">
                                        <h3 class="info-count">@Model.UserTickets.Where(t => t.Updated > DateTime.Now.Date.AddDays(-7)).Count() <span class="pull-right"><i class="fa fa-calendar"></i></span></h3>
                                        <p class="info-text font-12">Tickets Not Updated for 7 Days</p>
                                        @*<p class="info-ot font-15">Unassigned:<span class="label label-rounded">@Model.AllTickets.Where(t => (t.Updated > DateTime.Now.Date.AddDays(-14)) && (t.AssignedUserId == null)).Count()</span></p>*@
                                    </div>
                                </div>
                            </div>
                        </div>
                    </li>
                    <!--
                    <li class="tab" style="display: inline;">
                        <div class="col-md-4 col-sm-12 info-color-box">
                            <div class="white-box">
                                <div class="media bg-roseybrown">
                                    <div class="media-body" style="color:white;">
                                        <h3 class="info-count">@Model.UserTickets.Where(t => t.AssignedUserId == null).Count() <span class="pull-right"><i class="fa fa-users"></i></span></h3>
                                        <p class="info-text font-12">Unassigned Tickets</p>
                                        <p class="info-ot font-15">Dev's with No Assignments<span class="label label-rounded">@Model.DevelopersWithNoTicketAssignments.Count()</span></p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </li>-->


                    <!-- DEVELOPER GRAPHS SECTION -->
                </div>
                <div class="row">
                    <div class="col-md-4 col-sm-12">
                        <div class="white-box order-chart-widget">
                            <h4 class="box-title">Ticket Priorities</h4>
                            <div id="devticket_priority_donut" style="height: 387px;"></div>
                            <ul class="list-inline m-b-0 m-t-20 t-a-c">
                                <li>
                                    <h6 class="font-15"><i class="fa fa-circle m-r-5 text-danger"></i>Critical</h6>
                                </li>
                                <li>
                                    <h6 class="font-15"><i class="fa fa-circle m-r-5 text-warning"></i>High</h6>
                                </li>
                                <li>
                                    <h6 class="font-15"><i class="fa fa-circle m-r-5 text-info"></i>Medium</h6>
                                </li>
                                <li>
                                    <h6 class="font-15"><i class="fa fa-circle m-r-5 text-success"></i>Low</h6>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <div class="colorbox-group-widget">
                        <li class="tab" style="display: inline;">
                            <div class="col-md-4 col-sm-12 info-color-box">
                                <div class="white-box">
                                    <div class="media bg-roseybrown">
                                        <div class="media-body" style="color:white;">
                                            <h3 class="info-count">@Model.UserTickets.Count() <span class="pull-right"><i class="fa fa-users"></i></span></h3>
                                            <p class="info-text font-12"># Assigned Tickets</p>
                                            @*<p class="info-ot font-15">Dev's with No Assignments<span class="label label-rounded">@Model.DevelopersWithNoTicketAssignments.Count()</span></p>*@
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </li>
                    </div>
                    <div class="col-md-4 col-sm-12">
                        <div class="white-box order-chart-widget">
                            <h4 class="box-title">Ticket Statuses</h4>
                            <div id="devticket_status_donut" style="height: 350px;"></div>
                            <ul class="list-inline m-b-0 m-t-20 t-a-c">
                                <li>
                                    <h6 class="font-15"><i class="fa fa-circle m-r-5 text-danger"></i>Submitted</h6>
                                </li>
                                <li>
                                    <h6 class="font-15"><i class="fa fa-circle m-r-5 text-warning"></i>Assigned</h6>
                                </li>
                                <li>
                                    <h6 class="font-15"><i class="fa fa-circle m-r-5 text-primary"></i>In-Progress</h6>
                                </li>
                                <li>
                                    <h6 class="font-15"><i class="fa fa-circle m-r-5 text-info"></i>Pending</h6>
                                </li>
                                <li>
                                    <h6 class="font-15"><i class="fa fa-circle m-r-5 text-success"></i>Resolved</h6>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            }
            else {
                    <!-- SUBMITTER SECTION -->
                if (User.IsInRole("Submitter")) {
                    <!-- SUBMITTER COLOR BOXES AT TOP OF PAGE -->
                    <div class="row colorbox-group-widget">
                        @*<div class="white-box">
                            <ul class="nav nav-tabs tabs customtab">*@
                        <li class="active tab" style="display: inline;">
                            <div class="col-md-4 col-sm-8 info-color-box">
                                <div class="white-box">
                                    <div class="media bg-danger">
                                        <div class="media-body">
                                            <h3 class="info-count">@Model.SubmittedTickets.Where(t => t.TicketPriority.Id == 5).Count() <span class="pull-right"><i class="fa fa-fire"></i></span></h3>
                                            <p class="info-text font-12">Critical Tickets</p>
                                            <p class="info-ot font-15">Unassigned:<span class="label label-rounded">@Model.SubmittedTickets.Where(t => (t.TicketPriority.Id == 5 && t.AssignedUserId == null)).Count()</span></p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </li>
                        <li class="tab" style="display: inline;">
                            <div class="col-md-4 col-sm-8 info-color-box">
                                <div class="white-box">
                                    <div class="media bg-warning">
                                        <div class="media-body">
                                            <h3 class="info-count">@Model.SubmittedTickets.Where(t => t.TicketPriority.Id == 4).Count() <span class="pull-right"><i class="fa fa-bolt"></i></span></h3>
                                            <p class="info-text font-12">High Priority Tickets</p>
                                            <p class="info-ot font-15">Unassigned:<span class="label label-rounded">@Model.SubmittedTickets.Where(t => (t.TicketPriority.Id == 4 && t.AssignedUserId == null)).Count()</span></p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </li>
                        <li class="tab" style="display: inline;">
                            <div class="col-md-4 col-sm-8 info-color-box">
                                <div class="white-box">
                                    <div class="media bg-info">
                                        <div class="media-body">
                                            <h3 class="info-count">@Model.SubmittedTickets.Where(t => t.Updated > DateTime.Now.Date.AddDays(-7)).Count() <span class="pull-right"><i class="fa fa-calendar"></i></span></h3>
                                            <p class="info-text font-12">Tickets Not Updated for 7 Days</p>
                                            <p class="info-ot font-15">Unassigned:<span class="label label-rounded">@Model.SubmittedTickets.Where(t => (t.Updated > DateTime.Now.Date.AddDays(-14)) && (t.AssignedUserId == null)).Count()</span></p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </li>
                        <!--
                        <li class="tab" style="display: inline;">
                                <div class="col-md-3 col-sm-6 info-color-box">
                                <div class="white-box">
                                    <div class="media bg-roseybrown">
                                        <div class="media-body" style="color:white;">
                                            <h3 class="info-count">@Model.SubmittedTickets.Where(t => t.AssignedUserId == null).Count() <span class="pull-right"><i class="fa fa-users"></i></span></h3>
                                            <p class="info-text font-12">Unassigned Tickets</p>
                                            <p class="info-ot font-15">Dev's with No Assignments<span class="label label-rounded">@Model.SubmittedTickets.Where(t => t.AssignedUserId == null).Count()</span></p>
                                        </div>
                                    </div>
                                </div>
                                </div>
                        </li>
                        -->

                        <!-- SUBMITTER GRAPHS SECTION -->
                    </div>
                    <div class="row">
                        <div class="col-md-4 col-sm-12">
                            <div class="white-box order-chart-widget">
                                <h4 class="box-title">Ticket Priorities</h4>
                                <div id="subticket_priority_donut" style="height: 387px;"></div>
                                <ul class="list-inline m-b-0 m-t-20 t-a-c">
                                    <li>
                                        <h6 class="font-15"><i class="fa fa-circle m-r-5 text-danger"></i>Critical</h6>
                                    </li>
                                    <li>
                                        <h6 class="font-15"><i class="fa fa-circle m-r-5 text-warning"></i>High</h6>
                                    </li>
                                    <li>
                                        <h6 class="font-15"><i class="fa fa-circle m-r-5 text-info"></i>Medium</h6>
                                    </li>
                                    <li>
                                        <h6 class="font-15"><i class="fa fa-circle m-r-5 text-success"></i>Low</h6>
                                    </li>
                                </ul>
                            </div>
                        </div>
                        <div class="colorbox-group-widget">
                            <li class="tab" style="display: inline;">
                                <div class="col-md-4 col-sm-12 info-color-box">
                                    <div class="white-box">
                                        <div class="media bg-roseybrown">
                                            <div class="media-body" style="color:white;">
                                                <h3 class="info-count">@Model.SubmittedTickets.Count() <span class="pull-right"><i class="fa fa-users"></i></span></h3>
                                                <p class="info-text font-12">Total Submitted Tickets</p>
                                                @*<p class="info-ot font-15">Dev's with No Assignments<span class="label label-rounded">@Model.DevelopersWithNoTicketAssignments.Count()</span></p>*@
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </li>
                        </div>
                        <div class="col-md-4 col-sm-12">
                            <div class="white-box order-chart-widget">
                                <h4 class="box-title">Ticket Statuses</h4>
                                <div id="subticket_status_donut" style="height: 350px;"></div>
                                <ul class="list-inline m-b-0 m-t-20 t-a-c">
                                    <li>
                                        <h6 class="font-15"><i class="fa fa-circle m-r-5 text-danger"></i>Submitted</h6>
                                    </li>
                                    <li>
                                        <h6 class="font-15"><i class="fa fa-circle m-r-5 text-warning"></i>Assigned</h6>
                                    </li>
                                    <li>
                                        <h6 class="font-15"><i class="fa fa-circle m-r-5 text-primary"></i>In-Progress</h6>
                                    </li>
                                    <li>
                                        <h6 class="font-15"><i class="fa fa-circle m-r-5 text-info"></i>Pending</h6>
                                    </li>
                                    <li>
                                        <h6 class="font-15"><i class="fa fa-circle m-r-5 text-success"></i>Resolved</h6>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                }
            }
        }
    }




    @section Scripts {
        <script src="//cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js"></script>
        <script src="//cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.min.js"></script>
        @if (User.IsInRole("Admin")) {
        <!-- ADMIN WIDGET SCRIPTS-->
        <script>
        new Morris.Donut({
            element: 'ticket_priority_donut',
            data: [{
                label: "Critical",
                value: @Model.AllTickets.Where(t => t.TicketPriorityId == 5).Count()
            }, {
                label: "High",
                value: @Model.AllTickets.Where(t => t.TicketPriorityId == 4).Count()
            }, {
                label: "Medium",
                value: @Model.AllTickets.Where(t => t.TicketPriorityId == 3).Count()
            }, {
                label: "Low",
                value: @Model.AllTickets.Where(t => t.TicketPriorityId == 2).Count()
            }
            ],
            resize: true,
            colors: ['#d9534f', '#f0ad4e', '#5bc0de', '#5cb85c']
        });
        </script>
        <script>
            new Morris.Donut({
                element: 'ticket_status_donut',
                data: [{
                    label: "Submitted",
                    value: @Model.AllTickets.Where(t => t.TicketStatusId == 1).Count()
                }, {
                    label: "Assigned",
                    value: @Model.AllTickets.Where(t => t.TicketStatusId == 2).Count()
                }, {
                    label: "In Progress",
                    value: @Model.AllTickets.Where(t => t.TicketStatusId == 3).Count()
                }, {
                    label: "Pending",
                    value: @Model.AllTickets.Where(t => t.TicketStatusId == 4).Count()
                }, {
                    label: "Resolved",
                    value: @Model.AllTickets.Where(t => t.TicketStatusId == 5).Count()
                }],
                resize: true,
                colors: ['#d9534f', '#f0ad4e', '#337ab7', '#5bc0de', '#5cb85c']
            });
        </script>
        <script>
            var line = new Morris.Bar({
                element: 'developerInfoChart',
                resize: true,
                data: [{
                    x: 'Admin',
                    Value: @Model.AllUsers.Where(u => u.Roles.Any(r => r.RoleId == "15d6e5d2-56b5-4023-a411-c6029a989052")).Count()
                }, {
                    x: 'Project Manager',
                    Value: @Model.AllUsers.Where(u => u.Roles.Any(r => r.RoleId == "5e1d6394-7712-4389-bfee-eecc30b2b985")).Count()
                }, {
                    x: 'Developer',
                    Value: @Model.AllUsers.Where(u => u.Roles.Any(r => r.RoleId == "f6c4f96d-cab2-4667-b3da-70b9165f344c")).Count()
                }, {
                    x: 'Submitter',
                    Value: @Model.AllUsers.Where(u => u.Roles.Any(r => r.RoleId == "bab7637d-3aba-4a75-b243-b08e1a8440d1")).Count()
                }],
                xkey: 'x',
                ykeys: ['Value'],
                labels: ['Roles'],
                //gridLineColor: '#e0e0e0',
                barColors: ['#5cb85c'],
                lineWidth: 1,
                xLabelAngle: 45,
                padding: 50,
                hideHover: 'auto'
            });

        </script>
        }
        else {
            if (User.IsInRole("ProjectManager")) {
        <!-- PROJECTMANAGER WIDGET SCRIPTS-->
                <script>
                    new Morris.Donut({
                        element: 'pmticket_priority_donut',
                        data: [{
                            label: "Critical",
                            value: @Model.UserProjects.Where(p => p.Tickets.Any(t => t.TicketPriorityId == 5)).Count()
                        }, {
                            label: "High",
                            value: @Model.UserProjects.Where(p => p.Tickets.Any(t => t.TicketPriorityId == 4)).Count()
                            }, {
                            label: "Medium",
                            value: @Model.UserProjects.Where(p => p.Tickets.Any(t => t.TicketPriorityId == 3)).Count()
                            }, {
                            label: "Low",
                            value: @Model.UserProjects.Where(p => p.Tickets.Any(t => t.TicketPriorityId == 2)).Count()
                            }
                        ],
                        resize: true,
                        colors: ['#d9534f', '#f0ad4e', '#5bc0de', '#5cb85c']
                    });

                </script>
                <script>
                    new Morris.Donut({
                        element: 'pmticket_status_donut',
                        data: [{
                            label: "Submitted",
                            value: @Model.UserProjects.Where(p => p.Tickets.Any(t => t.TicketStatusId == 1)).Count()
                        }, {
                            label: "Assigned",
                            value: @Model.UserProjects.Where(p => p.Tickets.Any(t => t.TicketStatusId == 2)).Count()
                        }, {
                            label: "In Progress",
                            value: @Model.UserProjects.Where(p => p.Tickets.Any(t => t.TicketStatusId == 3)).Count()
                        }, {
                            label: "Pending",
                            value: @Model.UserProjects.Where(p => p.Tickets.Any(t => t.TicketStatusId == 4)).Count()
                        }, {
                            label: "Resolved",
                            value: @Model.UserProjects.Where(p => p.Tickets.Any(t => t.TicketStatusId == 5)).Count()
                        }],
                        resize: true,
                        colors: ['#d9534f', '#f0ad4e', '#337ab7', '#5bc0de', '#5cb85c']
                    });
                </script>
                <script>
                    var line2 = new Morris.Bar({
                        element: 'pmdeveloperInfoChart',
                        resize: true,
                        data: [{
                            x: 'Admin',
                            Value: @Model.UserProjects.Where(p => p.Users.Any(u => u.Roles.Any(r => r.RoleId == "15d6e5d2-56b5-4023-a411-c6029a989052"))).Count()
                        }, {
                            x: 'Project Manager',
                            Value: @Model.UserProjects.Where(p => p.Users.Any(u => u.Roles.Any(r => r.RoleId == "5e1d6394-7712-4389-bfee-eecc30b2b985"))).Count()
                        }, {
                            x: 'Developer',
                            Value: @Model.UserProjects.Where(p => p.Users.Any(u => u.Roles.Any(r => r.RoleId == "f6c4f96d-cab2-4667-b3da-70b9165f344c"))).Count()
                        }, {
                            x: 'Submitter',
                            Value: @Model.UserProjects.Where(p => p.Users.Any(u => u.Roles.Any(r => r.RoleId == "bab7637d-3aba-4a75-b243-b08e1a8440d1"))).Count()
                        }],
                        xkey: 'x',
                        ykeys: ['Value'],
                        labels: ['Roles'],
                        //gridLineColor: '#e0e0e0',
                        barColors: ['#5cb85c'],
                        lineWidth: 1,
                        xLabelAngle: 45,
                        padding: 50,
                        hideHover: 'auto'
                    });

                </script>
            }
            else {
                if (User.IsInRole("Developer")) {
        <!-- DEVELOPER WIDGET SCRIPTS-->
            <script>
                new Morris.Donut({
                    element: 'devticket_priority_donut',
                    data: [{
                        label: "Critical",
                        value: @Model.UserTickets.Where(t => t.TicketPriorityId == 5).Count()
                    }, {
                        label: "High",
                        value: @Model.UserTickets.Where(t => t.TicketPriorityId == 4).Count()
                    }, {
                        label: "Medium",
                        value: @Model.UserTickets.Where(t => t.TicketPriorityId == 3).Count()
                    }, {
                        label: "Low",
                        value: @Model.UserTickets.Where(t => t.TicketPriorityId == 2).Count()
                    }
                    ],
                    resize: true,
                    colors: ['#d9534f', '#f0ad4e', '#5bc0de', '#5cb85c']
                });
                    </script>
                    <script>
                    new Morris.Donut({
                        element: 'devticket_status_donut',
                        data: [{
                            label: "Submitted",
                            value: @Model.UserTickets.Where(t => t.TicketStatusId == 1).Count()
                        }, {
                            label: "Assigned",
                            value: @Model.UserTickets.Where(t => t.TicketStatusId == 2).Count()
                        }, {
                            label: "In Progress",
                            value: @Model.UserTickets.Where(t => t.TicketStatusId == 3).Count()
                        }, {
                            label: "Pending",
                            value: @Model.UserTickets.Where(t => t.TicketStatusId == 4).Count()
                        }, {
                            label: "Resolved",
                            value: @Model.UserTickets.Where(t => t.TicketStatusId == 5).Count()
                        }],
                        resize: true,
                        colors: ['#d9534f', '#f0ad4e', '#337ab7', '#5bc0de', '#5cb85c']
                    });
                    </script>

                }
                else {
                    if (User.IsInRole("Submitter")) {
                    <!-- SUBMITTER WIDGET SCRIPTS-->
                        <script>
                        new Morris.Donut({
                            element: 'subticket_priority_donut',
                            data: [{
                                label: "Critical",
                                value: @Model.SubmittedTickets.Where(t => t.TicketPriorityId == 5).Count()
                            }, {
                                label: "High",
                                value: @Model.SubmittedTickets.Where(t => t.TicketPriorityId == 4).Count()
                            }, {
                                label: "Medium",
                                value: @Model.SubmittedTickets.Where(t => t.TicketPriorityId == 3).Count()
                            }, {
                                label: "Low",
                                value: @Model.SubmittedTickets.Where(t => t.TicketPriorityId == 2).Count()
                            }
                            ],
                            resize: true,
                            colors: ['#d9534f', '#f0ad4e', '#5bc0de', '#5cb85c']
                        });
                        </script>
                        <script>
                            new Morris.Donut({
                                element: 'subticket_status_donut',
                                data: [{
                                    label: "Submitted",
                                    value: @Model.SubmittedTickets.Where(t => t.TicketStatusId == 1).Count()
                                }, {
                                    label: "Assigned",
                                    value: @Model.SubmittedTickets.Where(t => t.TicketStatusId == 2).Count()
                                }, {
                                    label: "In Progress",
                                    value: @Model.SubmittedTickets.Where(t => t.TicketStatusId == 3).Count()
                                }, {
                                    label: "Pending",
                                    value: @Model.SubmittedTickets.Where(t => t.TicketStatusId == 4).Count()
                                }, {
                                    label: "Resolved",
                                    value: @Model.SubmittedTickets.Where(t => t.TicketStatusId == 5).Count()
                                }],
                                resize: true,
                                colors: ['#d9534f', '#f0ad4e', '#337ab7', '#5bc0de', '#5cb85c']
                            });
                        </script>
                    }
                }
            }

        }



    }
}


