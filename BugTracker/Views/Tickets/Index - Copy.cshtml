@model BugTracker.Models.Helpers.TicketsListViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (ViewBag.NoRolesAssigned) {
    <h1>Your account currently is not assigned to any roles.  Please contact your administrator.</h1>
}

<!-- Admin and ProjectManager - All Tickets-->
@if (User.IsInRole("Admin") || User.IsInRole("ProjectManager")) {
    <div class="row">
        <div class="col-sm-12">
            <div class="card-box table-responsive">

                <h4 class="header-title m-t-0 m-b-30">List of All Tickets For My Assigned Projects</h4>

                <table id="datatable-AdminPM" class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).ProjectId)</th>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).TicketPriorityId)</th>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).TicketStatusId)</th>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).Title)</th>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).Description)</th>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).TicketTypeId)</th>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).Created)</th>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).Updated)</th>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).OwnerUserId)</th>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).AssignedUserId)</th>
                            <th></th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var item in Model.AllTickets) {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.Project.Title)</td>
                                <td>@Html.DisplayFor(modelItem => item.TicketPriority.Name)</td>
                                <td>@Html.DisplayFor(modelItem => item.TicketStatus.Name)</td>
                                <td>@Html.DisplayFor(modelItem => item.Title)</td>
                                <td>@Html.DisplayFor(modelItem => item.Description)</td>
                                <td>@Html.DisplayFor(modelItem => item.TicketType.Name)</td>
                                <td>@Html.DisplayFor(modelItem => item.Created)</td>
                                <td>@Html.DisplayFor(modelItem => item.Updated)</td>
                                <td>@Html.DisplayFor(modelItem => Model.Users.First(u => u.Id == item.OwnerUserId).FullName)</td>
                                @if (item.AssignedUser != null) {
                                    <td>@Html.DisplayFor(modelItem => Model.Users.First(u => u.Id == item.AssignedUserId).FullName)</td>
                                }
                                else {
                                    <td></td> }
                                <td>@Html.ActionLink("Details", "Details", new { id = item.Id })</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div><!-- end col -->
    </div>
}
<hr />
<!-- Project Manager -->
@if (User.IsInRole("ProjectManager")) {
    <div class="row">
        <div class="col-sm-12">
            <div class="card-box table-responsive">

                <h4 class="header-title m-t-0 m-b-30">List of All Tickets For My Assigned Projects</h4>

                <table id="datatable-ProjectManager" class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).ProjectId)</th>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).TicketPriorityId)</th>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).TicketStatusId)</th>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).TicketTypeId)</th>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).Created)</th>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).Updated)</th>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).Title)</th>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).Description)</th>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).OwnerUserId)</th>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).AssignedUserId)</th>
                            <th></th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var item in Model.ProjectTickets) {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.Project.Title)</td>
                                <td>@Html.DisplayFor(modelItem => item.TicketPriority.Name)</td>
                                <td>@Html.DisplayFor(modelItem => item.TicketStatus.Name)</td>
                                <td>@Html.DisplayFor(modelItem => item.TicketType.Name)</td>
                                <td>@Html.DisplayFor(modelItem => item.Created)</td>
                                <td>@Html.DisplayFor(modelItem => item.Updated)</td>
                                <td>@Html.DisplayFor(modelItem => item.Title)</td>
                                <td>@Html.DisplayFor(modelItem => item.Description)</td>
                                <td>@Html.DisplayFor(modelItem => Model.Users.First(u => u.Id == item.OwnerUserId).FullName)</td>
                                @if (item.AssignedUser != null) {
                                    <td>@Html.DisplayFor(modelItem => Model.Users.First(u => u.Id == item.AssignedUserId).FullName)</td>
                                }
                                else {
                                <td></td> }
                                <td>@Html.ActionLink("Details", "Details", new { id = item.Id })</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div><!-- end col -->
    </div>
}
<hr />
<!-- Developer -->
@if (User.IsInRole("Developer")) {
    <div class="row">
        <div class="col-sm-12">
            <div class="card-box table-responsive">

                <h4 class="header-title m-t-0 m-b-30">List of My Assigned Tickets</h4>

                <table id="datatable-Developer" class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).ProjectId)</th>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).TicketPriorityId)</th>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).TicketStatusId)</th>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).TicketTypeId)</th>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).Created)</th>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).Updated)</th>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).Title)</th>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).Description)</th>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).OwnerUserId)</th>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).AssignedUserId)</th>
                            <th></th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var item in Model.AssignedTickets) {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.Project.Title)</td>
                                <td>@Html.DisplayFor(modelItem => item.TicketPriority.Name)</td>
                                <td>@Html.DisplayFor(modelItem => item.TicketStatus.Name)</td>
                                <td>@Html.DisplayFor(modelItem => item.TicketType.Name)</td>
                                <td>@Html.DisplayFor(modelItem => item.Created)</td>
                                <td>@Html.DisplayFor(modelItem => item.Updated)</td>
                                <td>@Html.DisplayFor(modelItem => item.Title)</td>
                                <td>@Html.DisplayFor(modelItem => item.Description)</td>
                                <td>@Html.DisplayFor(modelItem => Model.Users.First(u => u.Id == item.OwnerUserId).FullName)</td>
                                @if (item.AssignedUser != null) {
                                    <td>@Html.DisplayFor(modelItem => Model.Users.First(u => u.Id == item.AssignedUserId).FullName)</td>
                                }
                                else {<td></td> }
                                <td>@Html.ActionLink("Details", "Details", new { id = item.Id })</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div><!-- end col -->
    </div>
}
<hr />
<!-- Submitter -->
@if (User.IsInRole("Submitter")) {
    <div class="row">
        <div class="col-sm-12">
            <div class="card-box table-responsive">

                <h4 class="header-title m-t-0 m-b-30">List of My Submitted Tickets</h4>

                <table id="datatable-Submitter" class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).ProjectId)</th>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).TicketPriorityId)</th>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).TicketStatusId)</th>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).TicketTypeId)</th>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).Created)</th>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).Updated)</th>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).Title)</th>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).Description)</th>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).OwnerUserId)</th>
                            <th>@Html.DisplayNameFor(model => model.AllTickets.First(x => x.OwnerUserId != null).AssignedUserId)</th>
                            <th></th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var item in Model.SubmittedTickets) {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.Project.Title)</td>
                                <td>@Html.DisplayFor(modelItem => item.TicketPriority.Name)</td>
                                <td>@Html.DisplayFor(modelItem => item.TicketStatus.Name)</td>
                                <td>@Html.DisplayFor(modelItem => item.TicketType.Name)</td>
                                <td>@Html.DisplayFor(modelItem => item.Created)</td>
                                <td>@Html.DisplayFor(modelItem => item.Updated)</td>
                                <td>@Html.DisplayFor(modelItem => item.Title)</td>
                                <td>@Html.DisplayFor(modelItem => item.Description)</td>
                                <td>@Html.DisplayFor(modelItem => Model.Users.First(u => u.Id == item.OwnerUserId).FullName)</td>
                                @if (item.AssignedUser != null) {
                                    <td>@Html.DisplayFor(modelItem => Model.Users.First(u => u.Id == item.AssignedUserId).FullName)</td>
                                }
                                else {<td></td> }
                                <td>@Html.ActionLink("Details", "Details", new { id = item.Id })</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div><!-- end col -->
    </div>
}

<hr />
@section Scripts {
    <script src="~/Content/DataTables/datatables.min.js"></script>
    <script>$("#datatable-Submitter").DataTable({ "order": [[0, 'asc'], [3, 'desc'], [4, 'asc']] });</script>
    <script>$("#datatable-Developer").DataTable({ "order": [[0, 'asc'], [3, 'desc'], [4, 'asc']] });</script>
    <script>$("#datatable-ProjectManager").DataTable({ "order": [[0, 'asc'], [3, 'desc'], [4, 'asc']] });</script>
    <script>$("#datatable-AdminPM").DataTable({ "order": [[0, 'asc'], [3, 'desc'], [4, 'asc']] });</script>
}