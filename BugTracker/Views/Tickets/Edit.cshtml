@model BugTracker.Models.CodeFirst.Ticket

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="white-box">
    <h2 class="text-info">@Html.DisplayFor(model => model.Title)</h2>
    <h6>@Html.DisplayFor(model => model.Description)</h6>

    @using (Html.BeginForm()) {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Created)
        @Html.HiddenFor(model => model.Updated)
        @Html.HiddenFor(model => model.IsArchived)
        @Html.HiddenFor(model => model.OwnerUserId)
        @Html.HiddenFor(model => model.ProjectId)

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.ProjectId, "Parent Project", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("ProjectId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.TicketTypeId, "Ticket Type", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TicketPriorityId, "Ticket Priority", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
                </div>
            </div>
            @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager")) {
                <div class="form-group">
                    @Html.LabelFor(model => model.TicketStatusId, "Ticket Status", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
            else {
                @Html.HiddenFor(model => model.TicketStatusId)
            }
            @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager")) {
                <div class="form-group">
                    @Html.LabelFor(model => model.AssignedUserId, "Assigned Developer", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("AssignedUserId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AssignedUserId, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
            else {
                @Html.HiddenFor(model => model.AssignedUserId)
            }

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-info" />
                </div>
            </div>
        </div>
    }
    <hr />
    <div>
        @Html.ActionLink("Back to Details", "Details", new { id = Model.Id })
    </div>
</div>

